version: "3.9"

services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: ${DB_NAME:-survey}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"

  migrate:
    build: .
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    env_file:
      - .env
    environment:
      DJANGO_SETTINGS_MODULE: survey.settings
      DB_ENGINE: django.db.backends.postgresql
      DB_HOST: db
      DB_PORT: 5432
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    command: ["python", "manage.py", "migrate", "--noinput"]
    restart: "no"

  web:
    build: .
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
      migrate:
        condition: service_completed_successfully
    env_file:
      - .env
    environment:
      DJANGO_SETTINGS_MODULE: survey.settings
      DB_ENGINE: django.db.backends.postgresql
      DB_HOST: db
      DB_PORT: 5432
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    ports:
      - "8000:8000"
    command: ["gunicorn", "survey.wsgi:application", "--bind", "0.0.0.0:8000", "--workers", "3", "--timeout", "120"]
    volumes:
      - .:/app

  worker:
    build: .
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
      migrate:
        condition: service_completed_successfully
    env_file:
      - .env
    environment:
      DJANGO_SETTINGS_MODULE: survey.settings
      DB_ENGINE: django.db.backends.postgresql
      DB_HOST: db
      DB_PORT: 5432
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    command: ["celery", "-A", "survey.celery:celery_app", "worker", "--loglevel=INFO"]
    volumes:
      - .:/app

  beat:
    build: .
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
      migrate:
        condition: service_completed_successfully
    env_file:
      - .env
    environment:
      DJANGO_SETTINGS_MODULE: survey.settings
      DB_ENGINE: django.db.backends.postgresql
      DB_HOST: db
      DB_PORT: 5432
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    command: ["celery", "-A", "survey.celery:celery_app", "beat", "--loglevel=INFO"]
    volumes:
      - .:/app

volumes:
  pgdata:
