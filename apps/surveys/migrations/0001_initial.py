# Generated by Django 5.2.5 on 2025-08-23 04:20

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='SurveyQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('code', models.CharField(max_length=128)),
                ('prompt', models.TextField()),
                ('help_text', models.TextField(blank=True, null=True)),
                ('type', models.CharField(choices=[('text', 'Text'), ('number', 'Number'), ('date', 'Date'), ('dropdown', 'Dropdown'), ('checkbox', 'Checkbox'), ('radio', 'Radio')], max_length=24)),
                ('required', models.BooleanField(default=False)),
                ('sensitive', models.BooleanField(default=False)),
                ('constraints', models.JSONField(default=dict)),
                ('sort_order', models.IntegerField()),
                ('metadata', models.JSONField(default=dict)),
            ],
            options={
                'ordering': ['sort_order'],
            },
        ),
        migrations.CreateModel(
            name='Survey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('code', models.SlugField(max_length=128, unique=True)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('active', 'Active'), ('archived', 'Archived')], default='draft', max_length=16)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='surveys', to='accounts.organization')),
            ],
        ),
        migrations.CreateModel(
            name='SurveyInvitation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('email', models.EmailField(max_length=254)),
                ('token', models.CharField(max_length=64, unique=True)),
                ('expires_at', models.DateTimeField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('submitted', 'Submitted'), ('expired', 'Expired')], default='pending', max_length=16)),
                ('response_id', models.IntegerField(blank=True, null=True)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invitations', to='accounts.organization')),
                ('survey', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invitations', to='surveys.survey')),
            ],
        ),
        migrations.CreateModel(
            name='SurveyQuestionOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('value', models.CharField(max_length=255)),
                ('label', models.CharField(max_length=255)),
                ('sort_order', models.IntegerField()),
                ('metadata', models.JSONField(default=dict)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options', to='surveys.surveyquestion')),
            ],
            options={
                'ordering': ['sort_order'],
            },
        ),
        migrations.CreateModel(
            name='SurveySection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('sort_order', models.IntegerField()),
                ('survey', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sections', to='surveys.survey')),
            ],
            options={
                'ordering': ['sort_order'],
            },
        ),
        migrations.AddField(
            model_name='surveyquestion',
            name='section',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='surveys.surveysection'),
        ),
        migrations.AddIndex(
            model_name='survey',
            index=models.Index(fields=['status'], name='surveys_sur_status_88f57b_idx'),
        ),
        migrations.AddIndex(
            model_name='surveyinvitation',
            index=models.Index(fields=['survey', 'status'], name='idx_inv_survey_status'),
        ),
        migrations.AddIndex(
            model_name='surveyinvitation',
            index=models.Index(fields=['token'], name='idx_inv_token'),
        ),
        migrations.AlterUniqueTogether(
            name='surveyquestionoption',
            unique_together={('question', 'sort_order')},
        ),
        migrations.AlterUniqueTogether(
            name='surveysection',
            unique_together={('survey', 'sort_order')},
        ),
        migrations.AlterUniqueTogether(
            name='surveyquestion',
            unique_together={('section', 'code'), ('section', 'sort_order')},
        ),
    ]
